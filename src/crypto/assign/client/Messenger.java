/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crypto.assign.client;

import com.google.common.hash.Hashing;
import data_schema.Message;
import encryption.AES;
import encryption.DES;
import encryption.DigitalSignature;
import encryption.RSA;
import java.io.*;
import java.io.IOException;
import java.net.Socket;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.SecretKey;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;
import utility.InitialKeyExchange;
import utility.SendFile;

/**
 *
 * @author aks
 */
public class Messenger extends javax.swing.JFrame {

    /**
     * Creates new form Messenger
     */
    public Messenger() {
        initComponents();
    }
    
    
    public static String encryption = "AES";    // AES by default
    public static Socket sock;
    public static int PORT = 5000;
    public static int FILE_PORT = 5001;
    public static String HOST = "127.0.0.1";
    public static DataOutputStream dos;
    public static DataInputStream dis;
    public static ObjectInputStream ois;
    public static ObjectOutputStream oos;
    
    
    public static AES aes;
    public static DES des;
    public static RSA rsa;
    public static PublicKey publicKey;
    public static PrivateKey privateKey;
    
    public static String username = "";
    public static String signature;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg1 = new javax.swing.ButtonGroup();
        jRadioButton1 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        aesButton = new javax.swing.JRadioButton();
        desButton = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        inputArea = new javax.swing.JTextArea();
        sendButton = new javax.swing.JButton();
        sendFilesButton = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                Messenger.this.windowOpened(evt);
            }
        });

        displayArea.setColumns(20);
        displayArea.setRows(5);
        jScrollPane1.setViewportView(displayArea);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Encryption Scheme", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(77, 104, 211))); // NOI18N

        bg1.add(aesButton);
        aesButton.setText("AES");
        aesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                encryptionChoiceSelected(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encryptionChoiceSelected(evt);
            }
        });

        bg1.add(desButton);
        desButton.setText("DES");
        desButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                encryptionChoiceSelected(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encryptionChoiceSelected(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desButton)
                    .addComponent(aesButton))
                .addGap(59, 59, 59))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(aesButton)
                .addGap(37, 37, 37)
                .addComponent(desButton)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        inputArea.setColumns(20);
        inputArea.setRows(5);
        jScrollPane3.setViewportView(inputArea);

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        sendFilesButton.setText("Send Files");
        sendFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFilesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendFilesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                        .addComponent(sendFilesButton)
                        .addGap(22, 22, 22))
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        String message = inputArea.getText();
        
        byte[] encryptedMessage = null;
        String hash = "";
        
        switch(encryption){
            case "AES":{
                try{
                    ByteArrayOutputStream baos = new ByteArrayOutputStream();
                    aes.encryptWithAES(message, baos);
                    encryptedMessage = baos.toByteArray();
                }catch(Exception e){
                    e.printStackTrace();
                }
            }
            break;
            
            case "DES":{
                try{
                    ByteArrayOutputStream baos = new ByteArrayOutputStream();
                    des.encryptWithDES(message, baos);
                    encryptedMessage = baos.toByteArray();
                }catch(Exception e){
                    e.printStackTrace();
                }
            }
            break;
        }
        
        try{
            hash = Hashing.sha256().hashBytes(encryptedMessage).toString();
            System.out.println("Hash of Encrypted message: "+hash);
        }catch(Exception e){
            e.printStackTrace();
        }
        
        String receipient = username;
        
        Message msg = new Message(encryptedMessage, hash, signature, receipient);
        
        try{
            dos.writeUTF("#MSG");
            oos.writeObject(msg);
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_sendButtonActionPerformed

    private void encryptionChoiceSelected(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encryptionChoiceSelected
        if(aesButton.isSelected()){
            encryption = "AES";
        }else if(desButton.isSelected()){
            encryption = "AES";
        }
    }//GEN-LAST:event_encryptionChoiceSelected

    private void windowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowOpened
       
        try {
            
            aesButton.setSelected(true);
            
            sock = new Socket(HOST, PORT);
            dis = new DataInputStream(sock.getInputStream());
            dos = new DataOutputStream(sock.getOutputStream());
            oos = new ObjectOutputStream(sock.getOutputStream());
            ois = new ObjectInputStream(sock.getInputStream());
            System.out.println("Streams Initialised");
            
            
            dos.writeUTF(username);
            
            dos.writeUTF("#DIG");
            DigitalSignature digSig = new DigitalSignature(rsa.getPrivateKey());
            byte[] sig = digSig.getSignature(username);
            signature = Hashing.sha256().hashBytes(sig).toString();
            dos.writeUTF(signature);
           
            dos.writeUTF("#KEYTRANSFER");
            
            InitialKeyExchange initKeyEx = new InitialKeyExchange(ois, oos);
            new Thread(initKeyEx).start();
            
            
            
        } catch (Exception ex) {
            Logger.getLogger(Messenger.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_windowOpened

    private void sendFilesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFilesButtonActionPerformed
        try{
            JFileChooser j = new JFileChooser("/home/aks/Desktop",FileSystemView.getFileSystemView());
            int i = j.showOpenDialog(sendFilesButton);
            
            if(i == JFileChooser.APPROVE_OPTION){
                File f = j.getSelectedFile();
                System.out.println("Selected File: "+f);
                
                String outfile = "";
                
                switch(encryption){
                    case "AES":{
                        outfile = aes.encryptFile(f.getAbsolutePath(), aes.getSecretKey());
                        System.out.println("File Encrypted");
                    }
                    break;
                    
                    case "DES":{
                        outfile = des.encryptFile(f.getAbsolutePath(), des.getSecretKey());
                        System.out.println("File Encrypted");
                    }
                    break;
                }
                
                Socket sockf = new Socket(HOST, FILE_PORT);
                System.out.println("Connected to file server");
                DataInputStream disf = new DataInputStream(sockf.getInputStream());
                DataOutputStream dosf = new DataOutputStream(sockf.getOutputStream());
                ObjectInputStream oisf = new ObjectInputStream(sockf.getInputStream());
                ObjectOutputStream oosf = new ObjectOutputStream(sockf.getOutputStream());
                
                System.out.println("Calling Send method");
                SendFile sendFile = new SendFile();
                sendFile.sendFile(outfile, oosf);
                
                System.out.println("File Sent Successfully");
                
                oisf.close();
                oosf.close();
                sockf.close();
                
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_sendFilesButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Messenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Messenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Messenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Messenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Messenger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton aesButton;
    private javax.swing.ButtonGroup bg1;
    private javax.swing.JRadioButton desButton;
    public static javax.swing.JTextArea displayArea;
    private javax.swing.JTextArea inputArea;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton sendButton;
    private javax.swing.JButton sendFilesButton;
    // End of variables declaration//GEN-END:variables
}
